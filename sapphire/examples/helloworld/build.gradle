apply plugin: 'java-library'

// Customize app stub generation for this example
genStubs {
    def src = "$buildDir/classes/java/main/amino/run/appexamples/helloworld/"
    def dst = "src/main/java/amino/run/appexamples/helloworld/stubs/"
    def pkg = 'amino.run.appexamples.helloworld'
    args src, pkg, dst
    outputs.dir dst // Declare outputs, so gradle will run if they have been changed
    inputs.dir src   // Declare inputs, so gradle will run if they have been changed
}

// Customize stub compilation for this example
compileStubs {
    outputs.dir "$buildDir/classes/java/main/amino/run/appexamples/helloworld/stubs/"
}

jar.dependsOn compileStubs

// Customise task to run app
runapp {
    main = "amino.run.appexamples.helloworld.HelloWorldMain"
    // We pass extra parameters
    args project.property('embeddedKernelServerIp'), project.property('kernelServerPort'), project.property('omsIp'), project.property('omsPort'), project.hasProperty('W') ? project.property('W') : "DCAP World"
}

cleanStub{
    inputDir=file(project.projectDir.toString() + '/src/main/java/amino/run/appexamples/helloworld/')
    outputDir=file(project.projectDir.toString() + '/src/main/java/amino/run/appexamples/helloworld/stubs/')
}
compileJava.dependsOn cleanStub