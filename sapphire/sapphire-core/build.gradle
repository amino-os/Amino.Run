buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.+'
    }
}
apply plugin: 'com.jfrog.bintray'
apply plugin: 'java'

bintray {
    user = 'kshafiee'
    key = '664fa17e8af1f95e2cd83449bf1ba2dc0ee794e5'
    filesSpec {
       from 'build/libs'
       into '.'
    }
    pkg {
       repo = 'DCAP-Sapphire'
       name = 'sapphire-core'
       licenses = ['Apache-2.0']
       vcsUrl = 'https://github.com/bintray/gradle-bintray-plugin.git'
    }
}

repositories {
    flatDir {
        dirs '../libs'
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'org.json:json:20171018'
    compile project(':dependencies:java.rmi')
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.+'
    testCompile 'org.powermock:powermock:1.6.5'
    testCompile 'org.powermock:powermock-module-junit4:1.6.5'
    testCompile 'org.powermock:powermock-api-mockito:1.6.5'
}

task deleteJar(type: Delete) {
    delete 'build/libs/sapphire-core.jar'
    delete '../libs/sapphire-core.jar'
}

// run `gradle delstubs` to remove stub java files
task delStubs(type: Delete) {
    delete fileTree('src/main/java/sapphire/policy/stubs') {
        include '**/*_Stub.java'
    }
}

// TODO: We could use gradle to do automatic incremental builds.  
// Details can be found at https://blog.gradle.org/introducing-incremental-build-support
task genStubs(type: Exec) {
    executable "bash"
    args "-c", "pushd ../../generators && python3 generate_policy_stubs_on_host.py && popd"
}

task copyJar(type: Copy) {
    from('build/libs/')
    into('../libs/')
    include('sapphire-core.jar')
}

sourceCompatibility = "1.7"
targetCompatibility = "1.7"
